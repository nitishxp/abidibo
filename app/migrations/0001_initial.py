# Generated by Django 2.2.8 on 2020-02-27 15:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CountryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('capital', models.CharField(blank=True, max_length=50)),
                ('serving_phrase', models.TextField(blank=True)),
                ('welcome_message', models.TextField(blank=True)),
                ('population', models.IntegerField(default=0)),
                ('flag', models.ImageField(blank=True, upload_to='images/country/flag')),
                ('text_flag', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='images/country/image')),
                ('short_video', models.FileField(blank=True, upload_to='images/country/video')),
                ('stamp_for_passport', models.ImageField(blank=True, upload_to='country/passport')),
                ('character_name', models.CharField(blank=True, max_length=100)),
                ('character_image', models.ImageField(blank=True, null=True, upload_to='images/country/character')),
                ('character_parent_name', models.CharField(blank=True, max_length=100)),
                ('character_parent_image', models.ImageField(blank=True, upload_to='images/country/character')),
                ('character_introduction', models.CharField(blank=True, max_length=200)),
                ('character_country_description', models.CharField(blank=True, max_length=200)),
                ('character_country_cuisine_description', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Country',
            },
        ),
        migrations.CreateModel(
            name='GradeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(choices=[('k', 'K'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6')], max_length=1)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Grades',
                'verbose_name_plural': 'Grades',
            },
        ),
        migrations.CreateModel(
            name='LearningObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('grade', models.ManyToManyField(to='app.GradeModel')),
            ],
            options={
                'verbose_name': 'Learning Objective',
                'verbose_name_plural': 'Learning Objective',
                'db_table': 'learning_objectives',
            },
        ),
        migrations.CreateModel(
            name='QuestionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('question_title', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='images/questions')),
                ('rewards', models.IntegerField(default=3)),
                ('can_skip', models.BooleanField(default=True)),
                ('answer_explanation_text', models.TextField()),
                ('answer_helper_text', models.TextField()),
                ('answer_helper_image', models.ImageField(blank=True, upload_to='images/questions')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_type_ref', to='contenttypes.ContentType')),
                ('learning_objective', models.ManyToManyField(to='app.LearningObjective')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Question',
            },
        ),
        migrations.CreateModel(
            name='CountryFactsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('image', models.ImageField(null=True, upload_to='images/country/facts')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country', to='app.CountryModel')),
            ],
            options={
                'verbose_name': 'Country Facts',
                'verbose_name_plural': 'Country Facts',
            },
        ),
    ]
